V1.0:
1.调整波特率串口正常使用。
2.lcd1602正常使用
3.exti0，1，2，3 正常使用

V1.1:
1.添加led，beep， relay
2.位式控制，回差的位式，位置式pid，增量式pid
3.使用位置式pid和增量式pid，pid_out量最终对应成加热时间。
4.pid运算周期500ms， pid控制最大时间200ms，定时器每隔1ms执行控制一次。



// 注释模板 

/**
  ******************************************************************************
  * @file    usart.c
  * @author  abel li 
  * @version V1.5
  * @date    2017/1/11
  * @attention    http://www.chuxue123.com   http://www.openedv.com  
  * @brief  
	1. 
	2. 
	3. 
  *****************************************************************************/ 



// 函数模板

/**
  * @brief  
  * @param  no
  * @retval no
  */
  


// 说明模板

/**
  * @brief  
  **/  


// 分隔模板
/************************************ 1-1 *************************************/

  
// 文件结束  
/* end file */  




/*
printf("\r\n ................................................ \r\n");
printf("\r\n temp: %f \r\n", temp);
printf("\r\n yaw:%f, roll:%f, pitch:%f \r\n", yaw, roll, pitch);
printf("\r\n aacx:%d, aacy:%d, aacz:%d \r\n", aacx, aacy, aacz);
printf("\r\n gyrox:%d, gyroy:%d, gyroz:%d \r\n", gyrox, gyroy, gyroz);
printf("\r\n thanks you ..................................... \r\n");

//LED状态设置函数
void led_set(u8 sta)
{
	
} 
//函数参数调用测试函数
void test_fun(void(*ledset)(u8),u8 sta)
{
	ledset(sta);
}  	
*/




/*Power manage 
#include "stm32f10x.h"
#include "usart1.h"

int main ()
{
	
}*/


/* RTC time clock , prn current time 
#include "stm32f10x.h"
#include "date.h"
#include "calendar.h"
#include "usart1.h"
#include "rtc.h"


struct rtc_time system_time;

int main (void)
{
	USART_Config();
	RTC_NVIC_Config();
	
	RTC_CheckAndConfig(&system_time);
	
	Time_Show(&system_time);
	
	return 0;
}*/

/* Matrix Keyboard

#include "stm32f10x.h"
#include "delay.h"
#include "arraykeyscan.h"
#include "amount.h"

int main(void)
{
    int num = 0;
	
    delay_init();
    Scan_AKey_init();
	
    while(1)
    {
        num = AKey_Scan();
        amount(num,1);
    }   
}*/



/*	Isolation Keyboard_3  break mode

#include "stm32f10x.h"
#include "led.h"
#include "key_exti.h"

int main(void)
{	
   LED_GPIO_Config();
   EXTI_Key_init();
	 while(1)
	 {	
	 }	
}*/


/*  Isolation Keyboard_2  Scan Mode

#include "stm32f10x.h"
#include "delay.h"
#include "led.h"
#include "key.h"

int main(void)
{
	u8 ts = 0;
	
	delay_init();		
	Scan_Key_Configuration(); 
	LED_GPIO_Config();			
	delay_ms(500);
	
	while(1)
	{
 		ts = KEY_Scan(0);		
		if (ts > 0)
		{
 			Set_LED_Reverse(ts); 
			//GPIO_WriteBit( GPIOD, GPIO_Pin_, (BitAction)((1-GPIO_ReadOutputDataBit(GPIOD, GPIO_Pin_))));
		}
		delay_ms(10);	
	}
}*/



/* Digital tube rolling

#include "stm32f10x.h"
#include "delay.h"
#include "num_led.h"


int main(void)
{
    int i=1;
    int j=0;
    
    delay_init();
    
    while(1)
    {
        num_led_show(i,j);
        delay_ms(1000);
        i++;
        j++;

        if(i > 8)
        {
            i=1;
    	  }

        if(j > 9)
        {
            j=0;
        }
    }
}*/



/* Beep Machine

#include "stm32f10x.h"
#include "beep.h"

int main(void)
{
    int i = 0;
    BEEP_Init();		
    while(1)
		{
				BEEP(ON);
				for(i = 655350; i > 0; i--);
				for(i = 655350; i > 0; i--);
				for(i = 655350; i > 0; i--);
				BEEP(OFF);
				for(i = 655350; i > 0; i--);
				for(i = 655350; i > 0; i--);
				for(i = 655350; i > 0; i--);
		}
}
*/



/* Relay Machine

#include "stm32f10x.h"
#include "relay.h"

int main(void)
{
  int i = 0;
  
	relay_Init();			
	
  while(1)
	{
		
			RELAY(ON);			
			for(i = 655350; i > 0; i--);
			for(i = 655350; i > 0; i--);
			for(i = 655350; i > 0; i--);
	
			RELAY(OFF);
			for(i = 655350; i > 0; i--);
			for(i = 655350; i > 0; i--);
			for(i = 655350; i > 0; i--);
	}
}*/



/* 18 ADC Converted*/
/***************************************************************************************************
Project name:
		The Smart Temperature Control System 
	
Include file:
		Devices: adc.c		usart1.c		digital_tube.c		beep.c		relay.c		key_1.c		led.c		 
		System : delay.c	key_exit.c	variable.c	
		User:		 main.c		stm32f10x_it.c	

Test platform: 
		Unigress SMART 103

Test  wiring:
		PA0 <--> relay(5)
		PA1 <--> relay(6)
		
		PD8  <--> LED(1)
		PD9  <--> LED(2)
		PD10 <--> LED(3)
		PD11 <--> LED(4)	
		
		USART1 (ISP) loading
		
Complete data:
		2015 / 6 / 2 

Author name:
		Abel l					
***************************************************************************************************
Using explain: 

		Default temperature : 
				Lower: 15*C
				Upper: 25*C
				
		key8->S2,  To add max value
		key9->S3,  To sub max value
		key10->S4, To add min value
		key10->S5, To sub min value


***************************************************************************************************/
/* 
#include <stdio.h>
#include "stm32f10x.h"
#include "delay.h"

#include "adc.h"
#include "usart1.h"
#include "digital_tube.h"
#include "beep.h"
#include "relay.h"
#include "key_exti.h"
#include "led.h"
#include "lcd1602.h"

#include "logic.h"					 // To all function's organization 
#include "variable.h"        // Including change temperature's function

int main(void)
{
	NVIC_Config();
	
	delay_init();
	
	ADC_Configuration();
	USART_Config();
	Digital_Tube_Init();
	BEEP_Init();		
	relay_Init();			
	EXTI_Key_init();
	LED_GPIO_Config();
	LCD1602_Configuration();
	
	printf("=== SMART103 ADC EXAMPLE ===\r\n");
		
	while(1)
	{
		logic_function();					// include in logic.h file
	}
}*/


/* 17 Communication Protocol

#include <stdio.h>
#include "stm32f10x.h"
#include "usart1.h"
#include "delay.h"
#include "protocal.h"
#include "led.h"

int main (void)
{
	USART_Config();
	LED_GPIO_Config();
	
	printf("1111111111111111");
	
	while(1)
	{
		if(USART_ReceiveData(USART1)== '1')
		{
			GPIO_ResetBits(GPIOC, GPIO_Pin_3);
		}
		if(USART_ReceiveData(USART1)== '0')
		{
			GPIO_SetBits(GPIOC, GPIO_Pin_3);
		}
	}
}*/


/* 16-1   Digital Display

#include "stm32f10x.h"
#include "DigtalTube.h"
#include "delay.h"

int main (void)
{
	int i = 0;
	
	delay_init();
	Tube_GPIO_Config();

	while(1)
	{
			if(i > 0x0e)
			{
				i = 0;
			}else
			{
				i++;
			}
			  disp_number(25);
			//disp_one_num(2, 2, 1);
			//disp_all_same(i);
			delay_ms(1000);
	}
}*/



/* 15  LCD1602

#include "stm32f10x.h"
#include "lcd1602.h"
#include <stdio.h>

unsigned char display1[] = "hello";
unsigned char display2[] = "unigress";

int main(void)
{
	LCD1602_Configuration();
	
	show_1602 (display1, 1);
	show_1602 (display2, 2);
 
	while(1)
	{}
}*/



/* 14  Breathing LED

#include "stm32f10x.h"
#include "breathing_led.h"


int main (void)
{
	
	Breathing_LED_Init();
	while(1)
	{}
}*/



/* 13  PWM Output
#include "stm32f10x.h"
#include "core_cm3.h"
#include "pwm_output.h"

int main (void)
{
	TIM3_PWM_Init();
	while(1)
	{}
}*/



/* 12  SPI-Flash Communication

#include <stdio.h>
#include <stdarg.h>
#include "stm32f10x.h"
#include "core_cm3.h"
#include "usart1.h"
#include "spi_flash.h"

#define sFLASH_ID 0xEF4015
#define FLASH_SectorToErase 0x00000
#define FLASH_WriteAddress 0x00000
#define FLASH_ReadAddress	0x00000

uint32_t DeviceID; 
uint32_t FlashID;
u8 Tx_Buffer[] = "This is a SPI_FLASH test";
u8 Rx_Buffer[] = {0};
u16  BufferSize = 300;
u8 TransferStates1;

void Delay(__IO uint32_t nCount)
{
	for(; nCount > 0; nCount--);
}

int main (void)
{
	USART_Config();
	SPI_FLASH_Init();
	
	DeviceID = SPI_FLASH_ReadDeviceID();
	Delay(200);
	FlashID = SPI_FLASH_ID();
	printf("\r\n DeviceID = %d, FlashID = %d .\r\n", DeviceID, FlashID);
	
	if(FlashID == sFLASH_ID)
	{
		printf("\r\n I get Flash. \r\n");
		SPI_FLASH_SectorErase(FLASH_SectorToErase);
		
		SPI_FLASH_BufferWrite(Tx_Buffer, FLASH_WriteAddress, BufferSize);
		printf("\r\n The buffer's be write data : %s", Tx_Buffer);
		
		SPI_FLASH_BufferRead(Rx_Buffer, FLASH_ReadAddress, BufferSize);
		printf("\r\n The buffer's be Read data : %s", Tx_Buffer);
		
		TransferStates1 = Buffercmp(Tx_Buffer, Rx_Buffer, BufferSize);
		if(TransferStates1)
		{
			printf("\r\n Sucess \r\n");
		}else
		{
			printf("\r\n failed \r\n");
		}		
	}
	else
	{
		printf("\r\n Not obtain the flash ID \r\n");
	}
	SPI_FLASH_PowerDown();
	while(1) {};
}*/




/* 11 I2C-EEPROM

#include <stdio.h>
#include <stdarg.h>
#include "stm32f10x.h"
#include "core_cm3.h"
#include "usart1.h"
#include "i2c_ee.h"

int main (void)
{
	USART_Config();
	I2C_EE_Init();
	
	USART1_printf(USART1, "\r\nthis is a USART1_printf demo\r\n");
	USART1_printf(USART1, "\r\n("__DATE__" - "__TIME__")\r\n");
	
	I2C_Test();
	
	while(1)
	{}	
}*/



/* 10 Touch Screen

#include <stdio.h>
#include <stdarg.h>
#include "stm32f10x.h"
#include "core_cm3.h"
#include "lcd.h"

int main (void)
{
	LCD_Init();
}*/



/* 9  ADC-2

#include <stdio.h>
#include <stdarg.h>
#include "stm32f10x.h"
#include "core_cm3.h"
#include "usart1.h"
#include "tempad.h"

extern volatile uint16_t  ADC_ConvertedValue;
u16 Current_Temp;

void Delay(__IO uint32_t nCount)
{
	for(; nCount > 0; nCount--);
}

int main (void)
{
	USART_Config();
	Temp_ADC1_Init();
	printf("\r\n 123 ,Current Temperature: \r\n");

	while(1)
	{
		Delay(0xfffee);
		Current_Temp = ((v25 - ADC_ConvertedValue)/Avg_Slope) + 25;
		printf ("\r\n %3d ", Current_Temp);
	}		
	
}*/



/* 8  ADC_1

#include <stdio.h>
#include <stdarg.h>
#include "stm32f10x.h"
#include "core_cm3.h"
#include "usart1.h"
#include "adc.h"

extern volatile uint16_t  ADC_ConvertedValue ;
float ADC_ConvertedValueLocal;

void Delay(__IO uint32_t nCount)
{
	for(; nCount > 0; nCount--);
}

int main (void)
{
	USART_Config();
	ADC1_Init();
	
	printf("\r\n 123 \r\n");
	
	while (1)
	{
		ADC_ConvertedValueLocal = (float) (ADC_ConvertedValue / 4096 * 3);
		
		printf("0x%04x \r\n", ADC_ConvertedValue);
		printf("%f v \r\n",ADC_ConvertedValueLocal);
		
		Delay(0xffffee);
	}	
}*/



/* 7  USART1_DMACmd

#include <stdio.h> 
#include <stdarg.h>
#include "stm32f10x.h"
#include "core_cm3.h"
#include "usart1.h"
#include "led.h"

#define SENDBUFF_SIZE 5000

extern uint8_t SendBuff[SENDBUFF_SIZE];
uint16_t i;

int main (void)
{
	USART_Config();
	DMA_Config();
	LED_GPIO_Config();
	
	for (i = 0; i < SENDBUFF_SIZE; i++)
	{
		SendBuff[i] = 0xff;		
	}
	USART_DMACmd(USART1, USART_DMAReq_Tx, ENABLE);

	LED1(ON);
	
	while(1);	
}*/



/* 6  USART1_printf

#include <stdio.h>
#include <stdarg.h>
#include "stm32f10x.h"
#include "core_cm3.h"
#include "usart1.h"
#include "delay.h"

int main (void)
{
	u8 Res;
	
	USART_Config();
	delay_init();
	
	printf ("\r\n this is a printf demo \n");
	printf ("\r\n I Love You:\r\n");
	
	//USART1_printf(USART1, "\r\nthis is a USART1_printf demo\r\n");
	//USART1_printf(USART1, "\r\n("__DATE__" - "__TIME__")\r\n");
	
	while(1)
	{
		while(USART_GetFlagStatus(USART1,USART_FLAG_RXNE) == SET)
		{
			Res = USART_ReceiveData(USART1);
			USART_SendData(USART1, Res);
		}
	}
}*/



/* 5 SysTick_1

#include "stm32f10x.h"
#include "core_cm3.h"
#include "led.h"
#include "SysTick.h"

int main (void)
{
	LED_GPIO_Config();
	
	SysTick_Init();
	
	while(1)
	{
		LED1(ON);
		Delay_us(50000);      //50000*10us = 500ms
		LED1(OFF);
		
		LED2(ON);
		Delay_us(50000);
		LED2(OFF);
		
		LED3(ON);
		Delay_us(50000);
		LED3(OFF);
	}	
}*/



/* 4	Time is up
			Using EXTI_PE5

#include "stm32f10x.h"
#include "led.h"
#include "exti.h"

int main (void)
{
	LED_GPIO_Config();
	LED1(ON);	
	
	EXTI_PE5_Config();
	
	while (1)    //To enter the while(1) loop , wait interrupt
	{}
}*/



/* 3 Isolation Keyboard_1  

#include "stm32f10x.h"
#include "led.h"
#include "key.h"

int main (void)
{
	LED_GPIO_Config();
	LED1(ON);	
	
	Key_GPIO_Config();
	
	while (1)
	{
		if(Key_Scan(GPIOD, GPIO_Pin_8) == KEY_PRESS)
		{
			 GPIO_WriteBit( GPIOC, GPIO_Pin_3, (BitAction)((1-GPIO_ReadOutputDataBit(GPIOC, GPIO_Pin_3))));
		}
	}
}*/



/* 2 	 FlashLED_2

#include "stm32f10x.h"
#include "led.h"

void Delay(__IO u32 nCount);

int main (void)
{
	LED_GPIO_Config();
	while(1)
	{
	  LED1(ON);
		Delay(0x0fffef);
		LED1(OFF);
		
		LED2(ON);
		Delay(0xfffef);
		LED2(OFF);
		
		LED3(ON);
		Delay(0xfffef);
		LED3(OFF);
	}
}
void Delay(__IO u32 nCount)
{
	for (; nCount != 0; nCount--);
}*/



/* 1 FlashLED_1	流水灯

#include "led.h"
#include "stm32f10x.h"

int main (void)
{
	init_LED();
	init_delay();
	
	while(1)
	{ 
			water_LED();			
	}
}*/


